version: '3.8'

services:
  app:
    build: ./nextcloud
    container_name: nextcloud-app
    depends_on:
      cache:
        condition: service_healthy
      database:
        condition: service_healthy
    env_file:
      - ./nextcloud.env
      - ./nextcloud-app.env
      - ./postgres.env
      - ./redis.env
    healthcheck:
      test: curl -f http://localhost/status.php
    image: nextcloud-app
    ports:
      - "80:80"
    restart: always
    stop_signal: SIGWINCH
    volumes:
      - html:/var/www/html
      - config:/var/www/html/config
      - data:/var/www/html/data

  cron:
    container_name: nextcloud-cron
    entrypoint: ["/cron.sh"]
    depends_on:
      app:
        condition: service_healthy
    env_file:
      - ./nextcloud.env
      - ./nextcloud-cron.env
      - ./redis.env
    image: nextcloud-app
    restart: always
    volumes:
      - html:/var/www/html
      - config:/var/www/html/config
      - data:/var/www/html/data

  hpb:
    container_name: nextcloud-hpb
    entrypoint: ["/hpb.sh"]
    depends_on:
      app:
        condition: service_healthy
    env_file:
      - ./nextcloud.env
      - ./nextcloud-hpb.env
      - ./redis.env
    image: nextcloud-app
    ports:
      - "7867:7867"
    restart: always
    user: www-data
    volumes:
      - html:/var/www/html
      - config:/var/www/html/config
      - data:/var/www/html/data

  database:
    build: ./postgres
    container_name: nextcloud-database
    env_file:
      - ./postgres.env
    healthcheck:
      test: pg_isready -U nextcloud
    restart: always
    volumes:
      - database:/var/lib/postgresql/data

  cache:
    build: ./redis
    container_name: nextcloud-cache
    env_file:
      - ./redis.env
    healthcheck:
      test: redis-cli ping
    restart: always
    volumes:
      - cache:/data

volumes:
  html:
  cache:
  config:
  data:
  database:
