version: '3.8'

services:
  app:
    build: ./nextcloud
    container_name: nextcloud-app
    depends_on:
      cache:
        condition: service_healthy
      database:
        condition: service_healthy
    environment:
      - NEXTCLOUD_ADMIN_USER=admin
      - NEXTCLOUD_ADMIN_PASSWORD=admin
      - NEXTCLOUD_TRUSTED_DOMAINS=
      - OVERWRITEHOST=
      - OVERWRITEPROTOCOL=
    env_file:
      - ./nextcloud.env
      - ./postgres.env
      - ./redis.env
    healthcheck:
      test: ["CMD", "true"]
    image: nextcloud-app
    restart: unless-stopped
    volumes:
      - html:/var/www/html
      - config:/var/www/html/config
      - data:/var/www/html/data

  cron:
    container_name: nextcloud-cron
    entrypoint: ["/cron.sh"]
    depends_on:
      app:
        condition: service_healthy
    env_file:
      - ./nextcloud.env
      - ./postgres.env
      - ./redis.env
    image: nextcloud-app
    restart: unless-stopped
    volumes:
      - html:/var/www/html
      - config:/var/www/html/config
      - data:/var/www/html/data

  hpb:
    container_name: nextcloud-hpb
    entrypoint: ["/hpb.sh"]
    depends_on:
      web:
        condition: service_healthy
    environment:
      - PORT=7867
      - NEXTCLOUD_URL=http://web
    env_file:
      - ./nextcloud.env
      - ./postgres.env
      - ./redis.env
    image: nextcloud-app
    ports:
      - "7867:7867"
    restart: unless-stopped
    user: www-data
    volumes:
      - html:/var/www/html
      - config:/var/www/html/config
      - data:/var/www/html/data

  web:
    build: ./nginx
    container_name: nextcloud-web
    depends_on:
      app:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "service", "nginx", "status"]
      interval: 5s
    image: nextcloud-web
    ports:
      - 80:80
    restart: unless-stopped
    volumes:
      - html:/var/www/html:ro

  database:
    build: ./postgres
    container_name: nextcloud-database
    env_file:
      - ./postgres.env
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "nextcloud"]
      interval: 5s
    restart: unless-stopped
    volumes:
      - database:/var/lib/postgresql/data

  cache:
    build: ./redis
    container_name: nextcloud-cache
    env_file:
      - ./redis.env
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
    restart: unless-stopped

volumes:
  html:
  config:
  data:
  database:
